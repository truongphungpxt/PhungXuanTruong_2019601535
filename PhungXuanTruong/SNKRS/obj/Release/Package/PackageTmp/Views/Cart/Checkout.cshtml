@model SNKRS.Models.Order

@{
    ViewBag.Title = "Checkout";
}

<div class="container">
    <div data-reflow-type="shopping-cart">
        <div class="reflow-shopping-cart">

            <div class="ref-loading-overlay"></div>
            <div class="ref-checkout" style="display: flex;">
                <div class="ref-checkout-content">
                    @using (Html.BeginForm("Checkout", "Cart"))
                    {
                        @Html.AntiForgeryToken()
                        <div class="ref-details" style="display: block;">
                            <a class="ref-back" href="@Url.Action("Index", "Cart")" style="text-decoration: none">← Back to Cart</a>
                            <div class="ref-heading">Customer Details</div>
                            <div class="form-group mb-3">
                                @Html.LabelFor(model => model.Name)
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.User != null ? ViewBag.User.Name : "" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group mb-3">
                                @Html.LabelFor(model => model.Phone)
                                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.User != null ? ViewBag.User.PhoneNumber : "" } })
                                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group mb-3">
                                @Html.LabelFor(model => model.Address)
                                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.User != null ? ViewBag.User.Address : "" } })
                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                            </div>
                            <hr>
                            <label class="ref-accept-terms"></label>
                            <input class="btn btn-lg btn-success" type="submit" value="Next" />
                            <div id="paypal-button-container" class="mt-5"></div>
                        </div>
                    }
                </div>
                <div class="ref-checkout-summary">
                    <div class="ref-heading">Order Summary</div>
                    <div class="ref-products">
                        @foreach (var item in ViewBag.Cart)
                        {
                            <div class="ref-product" data-id="548179365">

                                <div class="ref-product-col">
                                    <img class="ref-product-photo" src="@item.ProductImage" alt="Paisley">
                                    <div>
                                        <div class="ref-product-name">@item.ProductName<span class="ref-product-secondary" style="font-weight: normal !important"> X @item.Quantity</span></div>
                                        <div class="ref-product-secondary">@item.ProductSize</div>
                                        <div class="ref-product-personalization-holder"></div>
                                    </div>
                                </div>
                                <div>
                                    <div class="ref-product-total">@String.Format("{0:#,##0}", item.Amount)</div>

                                </div>
                            </div>

                        }
                    </div>
                    <hr>
                    <div class="ref-coupon-code">
                        <div class="ref-coupon-container">
                            <div class="ref-coupon-input-holder">
                                <input id="ref-coupon-input" name="coupon-code" type="text" maxlength="32" autocomplete="off" placeholder="Enter coupon or promo code">
                                <span class="ref-coupon-input-clear" title="Clear">✕</span>
                            </div>
                            <div class="ref-button ref-add-code inactive">Apply</div>
                        </div>
                        <div class="ref-validation-error"></div>
                    </div>
                    <hr style="display: block;">
                    <div class="ref-totals">
                        <div class="ref-subtotal">
                            <div class="ref-row"><span>Subtotal</span><span>@String.Format("{0:#,##0}", ViewBag.Amount)</span></div>
                        </div>
                        <div class="ref-applied-coupon" style="display: none;">
                            <div class="ref-row">
                                <div class="ref-row"><span></span><span class="ref-remove-coupon">remove</span></div>
                                <span></span>
                            </div>
                        </div>
                        <div class="ref-shipping" style="display: block;">
                            <div class="ref-row"><span>Shipping (Worldwide Flat Rate)</span><span>FREE</span></div>
                        </div>
                        <div class="ref-taxes" style="display: none;">
                            <div class="ref-row"><span></span><span></span></div>
                        </div>
                    </div>
                    <hr>
                    <div class="ref-total">
                        <div class="ref-row"><span>Total</span><span>@String.Format("{0:#,##0}", ViewBag.Amount)</span></div>
                        <div class="ref-total-note">All prices are in <span>VND</span></div>
                    </div>
                </div>
                <div class="ref-summary-toggle ref-field-collapsible">
                    <span class="ref-field-toggle">Show Summary</span>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script src="https://www.paypal.com/sdk/js?client-id=AX32i4KRgMGJKEjZT_Cmk6kPVsmwB5f3vaNOfQSFltFMLRdAWN6_ggt_B22NbSJHyCFenYi9dRo9N2At&components=buttons"></script>
    <script>
        $(function () {
            paypal.Buttons({
                style: {
                    layout: 'vertical',
                    color: 'blue',
                    shape: 'rect',
                    label: 'paypal'
                },
                createOrder: function (data, actions) {
                    // Set up the transaction
                    return actions.order.create({
                        purchase_units: [{
                            amount: {
                                value: $("#Amount").text()
                            }
                        }]
                    });
                }
            }).render('#paypal-button-container');

            $.ajax({
                url: "@Url.Action("Amount", "Cart")",
                success: function (res) {
                    $("#Amount").text(parseFloat(res).toLocaleString());
                }
            });
        })
    </script>
}